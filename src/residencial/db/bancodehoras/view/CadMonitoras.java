/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package residencial.db.bancodehoras.view;

import residencial.db.bancodehoras.model.Monitora;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos Paulo
 */
public class CadMonitoras extends JInternalFrame {

    protected boolean telaMonitoras;
    Monitora monitora = new Monitora();
    DefaultTableModel modelo;
    boolean click = false;
    public CadMonitoras() {
        initComponents();
        monitora.monitoraAtiva(tbMonitoras);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jcbStatus = new javax.swing.JCheckBox();
        btSalvar = new javax.swing.JButton();
        cbAtiva = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMonitoras = new javax.swing.JTable();

        setTitle("Cadastro de Monitoras");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Monitora:");

        tfNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeActionPerformed(evt);
            }
        });

        jcbStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbStatus.setText("Exibir Monitoras Inativas");
        jcbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbStatusActionPerformed(evt);
            }
        });

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        cbAtiva.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbAtiva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcbStatus)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbAtiva, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAtiva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbMonitoras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMonitoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMonitorasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMonitoras);
        if (tbMonitoras.getColumnModel().getColumnCount() > 0) {
            tbMonitoras.getColumnModel().getColumn(0).setMinWidth(80);
            tbMonitoras.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbMonitoras.getColumnModel().getColumn(0).setMaxWidth(80);
            tbMonitoras.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeActionPerformed
        insert();
    }//GEN-LAST:event_tfNomeActionPerformed

    private void jcbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbStatusActionPerformed
        tfNome.setText("");
        cbAtiva.setSelectedIndex(0);
        if(jcbStatus.isSelected()){
            monitora.monitoraInativa(tbMonitoras);
        }else{
            monitora.monitoraAtiva(tbMonitoras);
        }
    }//GEN-LAST:event_jcbStatusActionPerformed

    private void tbMonitorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMonitorasMouseClicked
        int linha = tbMonitoras.getSelectedRow();
        if(evt.getClickCount()==1){
            click = true;
            monitora.setMonitoraId(Integer.parseInt(tbMonitoras.getValueAt(linha, 0).toString()));
            tfNome.setText(tbMonitoras.getValueAt(linha, 1).toString());
            
            if(jcbStatus.isSelected()){
                cbAtiva.setSelectedIndex(1);
            }else{
                cbAtiva.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_tbMonitorasMouseClicked

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        insert();   
    }//GEN-LAST:event_btSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbAtiva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbStatus;
    private javax.swing.JTable tbMonitoras;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables

    //public void mostrarTela(){        
        //setModal(true);         //A dialog tem que ser modal. S� pode retornar do setVisible ap�s ficar invis�vel.
        //setLocationRelativeTo(null);
        //setVisible(true);       //Mostramos a dialog e esperamos o usu�rio escolher alguma coisa.
    //}
    
    public void insert(){        
        monitora.setNomeMonitora(tfNome.getText());
        monitora.setStatus((String) cbAtiva.getSelectedItem());        
        
        if(click){
            monitora.update();
        }else{
            monitora.insert();        
        }
        
        if(jcbStatus.isSelected()){
            monitora.monitoraInativa(tbMonitoras);
        }else{
            monitora.monitoraAtiva(tbMonitoras);
        }
        
        tfNome.setText("");
        cbAtiva.setSelectedIndex(0);
        click = false;
    }
    
    
    
    /*
    LÊ AS LINHAS DO ARQUIVO DE TEXTO E ADICIONA NA TABLE
    public void preecheTabela(){
        List<String> lista = new Monitora().listarMonitoras();
        for(String monitora : lista) {
            String[] dados = monitora.split(";");
            
            modelo.addRow(new Object[]{           
                codigo(tbMonitoras.getRowCount()),
                dados[0],
                dados[1]});
        }
    }*/ 
    
    /*
    ADICIONA OS DADOS EM ARQUIVO DE TEXTO
    
    public void salvarDados(){
       monitora.setDados(tfNome.getText()+";"+status); 
       
        modelo.addRow(new Object[]{           
            codigo(tbMonitoras.getRowCount()),
            tfNome.getText(),
            status});

        JOptionPane.showMessageDialog(null, monitora.salvar());
        
        tfNome.setText("");       
        
    }*/
}
